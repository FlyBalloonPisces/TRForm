<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>